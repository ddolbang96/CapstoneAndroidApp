// Generated by view binder compiler. Do not edit!
package com.example.capstoneandroidapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.example.capstoneandroidapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TfeOdActivityCameraBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TfeOdLayoutBottomSheetBinding bottomSheetLayout;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final FloatingActionButton fabAdd;

  @NonNull
  public final FloatingActionButton fabSeach;

  @NonNull
  public final FloatingActionButton fabSwitchcam;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Toolbar toolbar;

  private TfeOdActivityCameraBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TfeOdLayoutBottomSheetBinding bottomSheetLayout, @NonNull FrameLayout container,
      @NonNull FloatingActionButton fabAdd, @NonNull FloatingActionButton fabSeach,
      @NonNull FloatingActionButton fabSwitchcam, @NonNull ProgressBar progressBar,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.bottomSheetLayout = bottomSheetLayout;
    this.container = container;
    this.fabAdd = fabAdd;
    this.fabSeach = fabSeach;
    this.fabSwitchcam = fabSwitchcam;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TfeOdActivityCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TfeOdActivityCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tfe_od_activity_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TfeOdActivityCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_sheet_layout;
      View bottomSheetLayout = rootView.findViewById(id);
      if (bottomSheetLayout == null) {
        break missingId;
      }
      TfeOdLayoutBottomSheetBinding binding_bottomSheetLayout = TfeOdLayoutBottomSheetBinding.bind(bottomSheetLayout);

      id = R.id.container;
      FrameLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.fab_add;
      FloatingActionButton fabAdd = rootView.findViewById(id);
      if (fabAdd == null) {
        break missingId;
      }

      id = R.id.fab_seach;
      FloatingActionButton fabSeach = rootView.findViewById(id);
      if (fabSeach == null) {
        break missingId;
      }

      id = R.id.fab_switchcam;
      FloatingActionButton fabSwitchcam = rootView.findViewById(id);
      if (fabSwitchcam == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new TfeOdActivityCameraBinding((CoordinatorLayout) rootView, binding_bottomSheetLayout,
          container, fabAdd, fabSeach, fabSwitchcam, progressBar, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
